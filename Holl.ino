int SpeedL = 40; //скорость левого мотора 
int SpeedR = 40; //скорость правого мотора 
int s1, s2; //переменные для считывания показаний с датчиков 
int sum; //сумма показаний датчиков 
void setup() {
}
void loop() //основной цикл
{
  forward(); //вперед
  left(); //влево
  forward(); //вперед
  right(); //впараво
  forward(); //вперед
  revers(); //разворот на 180
}
void sensor() //функция считывания показаний с датчиков
{
  s1 = digitalRead(A1); //присвоение переменной значения с левого датчика
  s2 = digitalRead(A2); //присвоение переменной значения с правого датчика
}
void stp() //функция остановки
{
  analogWrite(5, 0);//установка скорости левого мотора равной 0
  analogWrite(6, 0);//установка скорости правого мотора равной 0
  delay(1000); //задержка 1с
}
void left() //функция поворота налево
{
  sensor(); //вызов функции сенсоров
  digitalWrite(4, HIGH); //установка направления движения левого мотора
  analogWrite(5, 40); //установка скорости левого мотора равной 40
  digitalWrite(7, HIGH); //установка направления движения правого мотора
  analogWrite(6, 40); //установка скорости правого мотора равной 40
  delay(300); //время выполнения предыдущей операции 3с(задержка)
  digitalWrite(4, LOW); //установка направления движения левого мотора
  analogWrite(5, 40); //установка скорости левого мотора равной 40
  digitalWrite(7, HIGH); //установка направления движения правого мотора
  analogWrite(6, 40); //установка скорости правого мотора равной 40
  delay(500); //время выполнения предыдущей операции 3с(задержка)
  stp(); //вызов функции остановки
}
void right() //функция поворота налево
{
  sensor(); //вызов функции сенсоров
  digitalWrite(4, HIGH); //установка направления движения левого мотора
  analogWrite(5, 40); //установка скорости левого мотора равной 40
  digitalWrite(7, HIGH); //установка направления движения правого мотора
  analogWrite(6, 40); //установка скорости правого мотора равной 40
  delay(300); //время выполнения предыдущей операции 3с(задержка)
  digitalWrite(4, HIGH); //установка направления движения левого мотора
  analogWrite(5, 40); //установка скорости левого мотора равной 40
  digitalWrite(7, LOW); //установка направления движения правого мотора
  analogWrite(6, 40); //установка скорости правого мотора равной 40
  delay(500); //время выполнения предыдущей операции 3с(задержка)
  stp(); //вызов функции остановки
}
void forward() //функция движения вперед
{
  while (sum != 2) //движение будет выполняться пока сумма показаний с датчиков не образует 2, т.е. оба датчика не будут пресекать линию (условие)
  {   
    sum = 0; //обнуление условия
    sensor(); //вызов функции сенсоров
    if (s1 == 1) //если датчик обнаруживает линию
      SpeedR = SpeedR + 10; //увеличить скорость на 10
    if (s2 == 1) //если датчик обнаруживает линию
      SpeedL = SpeedL + 10; //увеличить скорость на 10
    digitalWrite(4, HIGH); //установка направления движения левого мотора
    analogWrite(5, SpeedL); //установка скорости левого мотора
    digitalWrite(7, HIGH); //установка направления движения правого мотора
    analogWrite(6, SpeedR); //установка скорости правого мотора
    sensor(); //вызов функции сенсоров
    sum = s1 + s2; //подсчет суммы для условия цикла
    SpeedL = 40; //установка значения скорости для повторного выполнения цикла
    SpeedR = 40; //установка значения скорости для повторного выполнения цикла
  }
  sum = 0;//обнуление условия
  stp(); //вызов функции остановки
}
void revers() //функция разворота
{
  sensor(); //вызов функции сенсоров
  digitalWrite(4, LOW); //установка направления движения левого мотора
  analogWrite(5, 40); //установка скорости левого мотора
  digitalWrite(7, HIGH); //установка направления движения правого мотора
  analogWrite(6, 40); //установка скорости правого мотора
  delay(1000); //время выполнения разворота
  stp(); //вызов функции остановки
}

